@page "/index"
@inject ILocalStorageService localStorage
@inject NavigationManager NavigationManager
@inject UsuarioService UsuarioService
@using UnphuCard_Api.Models
@inject AuthService AuthService
@inject ISessionStorageService sessionStorage
@using Blazored.SessionStorage
<div class="dashboard">
  
    <main>
        <div class="student-info">
            <div class="student-header">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
                    <circle cx="12" cy="7" r="4"></circle>
                </svg>
                <div>
                    <h2>@usuario.UsuNombre @usuario.UsuApellido</h2>
                    <p>Matrícula: @usuario.UsuMatricula</p>
                </div>
            </div>

            <div class="student-details">
                <div class="detail-item">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M22 10v6M2 10l10-5 10 5-10 5z"></path>
                        <path d="M6 12v5c3 3 9 3 12 0v-5"></path>
                    </svg>
                    <span>@usuario.UsuCarrera</span>
                </div>

                <div class="detail-grid">
                    <div class="detail-item">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <rect x="4" y="2" width="16" height="20" rx="2" ry="2"></rect>
                            <path d="M9 22v-4h6v4"></path>
                            <path d="M8 6h.01"></path>
                            <path d="M16 6h.01"></path>
                            <path d="M12 6h.01"></path>
                            <path d="M12 10h.01"></path>
                            <path d="M12 14h.01"></path>
                            <path d="M16 10h.01"></path>
                            <path d="M16 14h.01"></path>
                            <path d="M8 10h.01"></path>
                            <path d="M8 14h.01"></path>
                        </svg>                    
                        <span>@usuario.UsuCampus</span>
                    </div>

                    <div class="detail-item">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <rect x="1" y="4" width="22" height="16" rx="2" ry="2"></rect>
                            <line x1="1" y1="10" x2="23" y2="10"></line>
                        </svg>
                        <span>@usuario.UsuDocIdentidad</span>
                    </div>

                    <div class="detail-item">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
                            <polyline points="22,6 12,13 2,6"></polyline>
                        </svg>
                        <span>@usuario.UsuCorreo</span>
                    </div>
                </div>
            </div>
        </div>

        <hr class="separator" />

        <div class="account-details">
            <h2>Detalle de cuenta</h2>

            <div class="balance-card">
                <h3>Saldo a favor</h3>
                <p>RD$ @(usuario?.UsuSaldo.HasValue == true ? usuario.UsuSaldo.Value.ToString("F2") : "0.00")</p>
            </div>

            <div class="action-buttons">
                <button @onclick="NavigateToRecharge" class="action-button primary">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <rect x="1" y="4" width="22" height="16" rx="2" ry="2"></rect>
                        <line x1="1" y1="10" x2="23" y2="10"></line>
                    </svg>
                    <span>Recargar tarjeta</span>
                </button>
                <button @onclick="NavigateToHistory" class="action-button secondary">

                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M3 3v5h5"></path>
                        <path d="M3.05 13A9 9 0 1 0 6 5.3L3 8"></path>
                        <path d="M12 7v5l4 2"></path>
                    </svg>
                    <span>Historial de transacciones</span>
                </button>
            </div>
        </div>
    </main>

</div>
@code {
    private string token;
        private string errorMessage;
    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> AdditionalAttributes { get; set; }
    private Usuario usuario = new Usuario();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var userId = await AuthService.GetUserIdFromTokenAsync();
            await sessionStorage.SetItemAsync("userID", userId);

            usuario = await UsuarioService.GetStudentInfoAsync(userId);

        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
            NavigationManager.NavigateTo("/");
        }
    }

    private void Logout()
    {
        localStorage.RemoveItemAsync("authToken");
        NavigationManager.NavigateTo("/");
    }

    private void NavigateToRecharge()
    {
        NavigationManager.NavigateTo("/recarga");
    }

    private void NavigateToHistory()
    {
        NavigationManager.NavigateTo("/historial");
    }
}
    
