@page "/recarga"
@inject NavigationManager NavigationManager
@inject HttpClient Http
@using UnphuCard_Api.Models
@inject Blazored.LocalStorage.ILocalStorageService localStorage



<div class="min-h-screen bg-gray-100 flex flex-col">
    <header class="bg-green-600 text-white px-4 py-3 flex justify-between items-center">
        <h1 class="text-xl font-semibold">Recarga UnphuCard</h1>
    </header>
    
    <main class="flex-1 container mx-auto px-4 py-6">
        <button class="mb-4 text-green-600 hover:text-green-700" @onclick="GoBack">
            <span class="mr-2">←</span> Volver al dashboard
        </button>
        
        <div class="card w-full max-w-md mx-auto">
            <div class="card-header">
                <h2 class="card-title text-2xl font-bold text-gray-800">Recargar UNPHUCard</h2>
                <p class="card-description">Selecciona un monto rápido o ingresa uno personalizado</p>
            </div>
            <div class="card-content space-y-4">
                <div class="grid grid-cols-3 gap-4 mb-4">
                    @foreach (var quickAmount in QuickAmounts)
                    {
                        <button class="button-outline w-full" @onclick="() => SetAmount(quickAmount)">
                            RD$ @quickAmount
                        </button>
                    }
                </div>
                <div class="space-y-2">
                    <label for="amount">Monto personalizado</label>
                    <input id="amount" type="number" placeholder="0.00" @bind="Amount" class="input border-gray-300" />
                </div>

                <div class="space-y-2">
                    <label>Método de pago</label>
                    <div class="radio-group">
                        @foreach (var metodo in MetodosPago)
                        {
                            <div class="flex items-center space-x-2">
                                <InputText type="radio" id="@metodo.MetPagId" @bind-value="PaymentMethod"  name="metodoPago" />
                                <label for="@metodo.MetPagId">@metodo.MetPagDescripcion</label>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <button class="button w-full bg-green-600 hover:bg-green-700 text-white" @onclick="GoContinuar">
                    <span class="mr-2">💳</span> Continuar
                </button>
            </div>
        </div>
    </main>
    
    
</div>
@code {

    private string PaymentMethod { get; set; }
    private decimal Amount { get; set; }
    private List<int> QuickAmounts { get; set; } = new List<int> { 100, 200, 300, 500 };
    private List<MetodoPago> MetodosPago { get; set; } = new List<MetodoPago>();


    protected override async Task OnInitializedAsync()
    {
        try
        {
            MetodosPago = new List<MetodoPago>();

            MetodosPago = await Http.GetFromJsonAsync<List<MetodoPago>>("api/MostrarMetodoPago"); 
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al cargar los métodos de pago: {ex.Message}");
        }

        }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
            var storedPaymentMethod = await localStorage.GetItemAsync<string>("paymentMethod");
            if (!string.IsNullOrEmpty(storedPaymentMethod))
            {
                PaymentMethod = storedPaymentMethod;
            }
        
    }
    private async Task StorePaymentMethodAndAmount()
    {
        if (!string.IsNullOrEmpty(PaymentMethod))
        {
            await localStorage.SetItemAsync("paymentMethod", PaymentMethod);
        }

        if (Amount > 0)
        {
            await localStorage.SetItemAsync("amount", Amount);  
        }
    }

    private void SetAmount(decimal amount)
    {
        Amount = amount;
    }

  
    private void GoBack()
    {
        NavigationManager.NavigateTo("/index");
    }
    private void GoContinuar()
    {

        if (string.IsNullOrEmpty(PaymentMethod) || Amount <= 0)
        {
            Console.WriteLine("Por favor, seleccione un monto y un método de pago.");
            return;
        }
        NavigationManager.NavigateTo("/pago");
    }
}

