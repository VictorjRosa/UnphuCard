@page "/index"
@using Blazored.SessionStorage
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@layout TLayout
@inject SesionService Sesion 
@inject AuthService AuthService
@inject Blazored.SessionStorage.ISessionStorageService SessionStorageService
@inject ISessionStorageService sessionStorage

<div class="min-h-screen bg-gray-50 flex flex-col">

    <main class="flex-grow flex items-center justify-center p-4">
        <div class="card w-full max-w-md">
            <div class="card-content p-6 space-y-6">
                <button class="button inventory-button w-full h-20 text-xl flex items-center justify-center space-x-4" @onclick="HandleInventoryClick">
                    <span class="icon"><i class="store-icon"></i></span>
                    <span>Gestionar Inventario</span>
                </button>
                <button class="button sale-button w-full h-20 text-xl flex items-center justify-center space-x-4" @onclick="HandleSaleClick">
                    <span class="icon"><i class="shopping-cart-icon"></i></span>
                    <span>Realizar Venta</span>
                </button>
            </div>
        </div>
    </main>

</div>

@code {
    private string establishmentName = "";
    private int? estId = null; 

    protected override async Task OnInitializedAsync()
    {
        int userId = await AuthService.GetUserIdFromTokenAsync();

        var estIdResult = await AuthService.GetEstIdByUserIdAsync(userId);
        await sessionStorage.SetItemAsync("estId", estIdResult);


        if (!estIdResult.HasValue)
        {
            Console.WriteLine("No se pudo obtener el EstId del establecimiento.");
            return;
        }

        estId = estIdResult.Value; 
        establishmentName = "Tienda UNPHU";
    }

    private void HandleInventoryClick()
    {
       
        if (estId.HasValue)
        {
            NavigationManager.NavigateTo($"/inventario?estId={estId}");
        }
        else
        {
            Console.WriteLine("El EstId no está disponible.");
        }
    }

    private async Task HandleSaleClick()
    {
        if (!estId.HasValue)
        {
            return;
        }

        var success = await Sesion.RegistrarSesionAsync(estId.Value);

        if (success)
        {
            NavigationManager.NavigateTo("/compras");
        }
        else
        {
            Console.WriteLine("Hubo un error al registrar la sesión.");
        }
    }



}
